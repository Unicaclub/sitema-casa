upstream php-fpm {
    least_conn;
    server app:9000 max_fails=3 fail_timeout=30s;
    keepalive 32;
}

# Rate limiting zones
limit_req_zone $binary_remote_addr zone=auth:10m rate=5r/m;
limit_req_zone $binary_remote_addr zone=api:10m rate=100r/m;
limit_req_zone $binary_remote_addr zone=general:10m rate=300r/m;

# Connection limiting
limit_conn_zone $binary_remote_addr zone=addr:10m;

server {
    listen 80;
    server_name localhost;
    root /var/www/html/public;
    index index.php index.html;

    # Security settings
    limit_conn addr 10;
    limit_req zone=general burst=20 nodelay;

    # Disable access to hidden files
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }

    # Disable access to sensitive files
    location ~* \.(conf|sql|bak|old|log)$ {
        deny all;
        access_log off;
        log_not_found off;
    }

    # Health check endpoint
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }

    # API endpoints with stricter rate limiting
    location /api/ {
        limit_req zone=api burst=50 nodelay;
        try_files $uri $uri/ /index.php?$query_string;
    }

    # Authentication endpoints with very strict rate limiting
    location ~ ^/api/(auth|login|register) {
        limit_req zone=auth burst=10 nodelay;
        try_files $uri $uri/ /index.php?$query_string;
    }

    # Static files with caching
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header Vary Accept-Encoding;
        access_log off;
        
        # Serve files directly if they exist
        try_files $uri =404;
    }

    # Security dashboard
    location /security-dashboard {
        alias /var/www/html/public;
        try_files /security-dashboard.html =404;
        
        # Additional security for admin dashboard
        allow 127.0.0.1;
        allow 10.0.0.0/8;
        allow 172.16.0.0/12;
        allow 192.168.0.0/16;
        deny all;
    }

    # PHP handling
    location ~ \.php$ {
        try_files $uri =404;
        fastcgi_split_path_info ^(.+\.php)(/.+)$;
        fastcgi_pass php-fpm;
        fastcgi_index index.php;
        
        # FastCGI parameters
        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param PATH_INFO $fastcgi_path_info;
        
        # Security parameters
        fastcgi_param SERVER_NAME $server_name;
        fastcgi_param HTTPS $https if_not_empty;
        
        # Performance settings
        fastcgi_connect_timeout 60s;
        fastcgi_send_timeout 180s;
        fastcgi_read_timeout 180s;
        fastcgi_buffer_size 128k;
        fastcgi_buffers 4 256k;
        fastcgi_busy_buffers_size 256k;
        fastcgi_temp_file_write_size 256k;
        fastcgi_intercept_errors on;
    }

    # Default location
    location / {
        try_files $uri $uri/ /index.php?$query_string;
    }

    # Block access to specific file types
    location ~* \.(htaccess|htpasswd|ini|log|sh|sql|conf)$ {
        deny all;
    }

    # Block access to version control directories
    location ~ /\.(git|svn|hg) {
        deny all;
        access_log off;
        log_not_found off;
    }

    # Block access to composer files
    location ~* composer\.(json|lock)$ {
        deny all;
        access_log off;
        log_not_found off;
    }

    # Block access to package files
    location ~* package(-lock)?\.json$ {
        deny all;
        access_log off;
        log_not_found off;
    }
}

# HTTPS configuration (uncomment when SSL certificates are available)
# server {
#     listen 443 ssl http2;
#     server_name localhost;
#     root /var/www/html/public;
#     index index.php index.html;
# 
#     # SSL configuration
#     ssl_certificate /etc/nginx/ssl/cert.pem;
#     ssl_certificate_key /etc/nginx/ssl/key.pem;
#     ssl_session_timeout 1d;
#     ssl_session_cache shared:SSL:50m;
#     ssl_session_tickets off;
# 
#     # Modern SSL configuration
#     ssl_protocols TLSv1.2 TLSv1.3;
#     ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384;
#     ssl_prefer_server_ciphers off;
# 
#     # HSTS
#     add_header Strict-Transport-Security "max-age=63072000" always;
# 
#     # Include the same location blocks as HTTP configuration
#     include /etc/nginx/conf.d/common-locations.conf;
# }