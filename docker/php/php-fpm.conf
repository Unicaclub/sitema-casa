;;;;;;;;;;;;;;;;;;;;;
; FPM Configuration ;
;;;;;;;;;;;;;;;;;;;;;

[global]
; Pid file
pid = /var/run/php-fpm.pid

; Error log file
error_log = /var/log/php-fpm/error.log

; syslog facility
syslog.facility = daemon

; syslog ident
syslog.ident = php-fpm

; Log level
; Possible Values: alert, error, warning, notice, debug
log_level = warning

; Log limit on number of characters in the single line (log entry).
log_limit = 8192

; Log buffering on or off
log_buffering = no

; If this number of child processes exit with SIGSEGV or SIGBUS within the time
; interval set by emergency_restart_interval then FPM will restart.
emergency_restart_threshold = 60

; Interval of time used by emergency_restart_interval to determine when
; a graceful restart will be initiated.
emergency_restart_interval = 60s

; Time limit for child processes to wait for a reaction on signals from master.
process_control_timeout = 0

; The maximum number of processes FPM will fork.
process.max = 128

; Specify the nice(2) priority to apply to the master process (only if set)
; The value can vary from -19 (highest priority) to 20 (lower priority)
; process.priority = -19

; Send FPM to background. Set to 'no' to keep FPM in foreground for debugging.
daemonize = no

; Set open file descriptor rlimit for the master process.
rlimit_files = 1024

; Set max core size rlimit for the master process.
rlimit_core = 0

; Specify the event mechanism FPM will use.
; The following is available:
; - select     (any POSIX os)
; - poll       (any POSIX os)
; - epoll      (linux >= 2.5.44)
; - kqueue     (FreeBSD >= 4.1, OpenBSD >= 2.9, NetBSD >= 2.0)
; - /dev/poll  (Solaris >= 7)
; - port       (Solaris >= 10)
events.mechanism = epoll

; When FPM is build with systemd integration, specify the interval,
; in second, between health report notification to systemd.
systemd_interval = 10

;;;;;;;;;;;;;;;;;;;;
; Pool Definitions ;
;;;;;;;;;;;;;;;;;;;;

include=/usr/local/etc/php-fpm.d/*.conf