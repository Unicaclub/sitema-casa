[www]
; The name of the pool.
user = www
group = www

; The address on which to accept FastCGI requests.
listen = 9000

; Set listen(2) backlog.
listen.backlog = 511

; Set permissions for unix socket, if one is used.
listen.owner = www
listen.group = www

; Choose how the process manager will control the number of child processes.
; Possible Values:
;   static  - a fixed number (pm.max_children) of child processes;
;   dynamic - the number of child processes are set dynamically based on the
;             following directives. With this process management, there will be
;             always at least 1 children.
;             pm.max_children      - the maximum number of children that can
;                                    be alive at the same time.
;             pm.start_servers     - the number of children created on startup.
;             pm.min_spare_servers - the minimum number of children in 'idle'
;                                    state (waiting to process). If the number
;                                    of 'idle' processes is less than this
;                                    number then some children will be created.
;             pm.max_spare_servers - the maximum number of children in 'idle'
;                                    state (waiting to process). If the number
;                                    of 'idle' processes is greater than this
;                                    number then some children will be killed.
;  ondemand - no children are created at startup. Children will be forked when
;             new requests will connect. The following parameter are used:
;             pm.max_children           - the maximum number of children that
;                                         can be alive at the same time.
;             pm.process_idle_timeout   - The number of seconds after which
;                                         an idle process will be killed.
pm = dynamic

; The number of child processes to be created when pm is set to 'static' and the
; maximum number of child processes when pm is set to 'dynamic' or 'ondemand'.
pm.max_children = 50

; The number of child processes created on startup.
pm.start_servers = 5

; The desired minimum number of idle server processes.
pm.min_spare_servers = 5

; The desired maximum number of idle server processes.
pm.max_spare_servers = 35

; The number of seconds after which an idle process will be killed.
pm.process_idle_timeout = 10s

; The number of requests each child process should execute before respawning.
pm.max_requests = 500

; The URI to view the FPM status page.
pm.status_path = /fpm-status

; The ping URI to call the monitoring page of FPM.
ping.path = /fpm-ping

; This directive may be used to customize the response of a ping request.
ping.response = pong

; The access log file
access.log = /var/log/php-fpm/access.log

; The access log format.
access.format = "%R - %u %t \"%m %r\" %s %f %{mili}d %{kilo}M %C%%"

; The log file for slow requests
slowlog = /var/log/php-fpm/slow.log

; The timeout for serving a single request after which a PHP backtrace will be
; dumped to the 'slowlog' file. A value of '0s' means 'off'.
request_slowlog_timeout = 0

; Depth of slow log stack trace.
request_slowlog_trace_depth = 20

; The timeout for serving a single request after which the worker process will
; be killed. This option should be used when the 'max_execution_time' ini option
; does not stop script execution for some reason.
request_terminate_timeout = 120s

; Set open file descriptor rlimit.
rlimit_files = 1024

; Set max core size rlimit.
rlimit_core = 0

; Chroot to this directory at the start.
;chroot = 

; Chdir to this directory at the start.
chdir = /var/www/html

; Redirect worker stdout and stderr into main error log.
catch_workers_output = yes

; Decorate worker output with prefix and suffix containing information about
; the child that writes to the log and if stdout or stderr is used as well as
; the log level and the time. This options is used only if catch_workers_output
; is enabled.
decorate_workers_output = no

; Clear environment in FPM workers. Prevents arbitrary environment variables
; from reaching FPM worker processes by clearing the environment in workers
; before env vars specified in this pool configuration are added.
clear_env = no

; Limits the extensions of the main script FPM will allow to parse.
security.limit_extensions = .php

; Pass environment variables like LD_LIBRARY_PATH. All $VARIABLEs are taken from
; the current environment.
env[HOSTNAME] = $HOSTNAME
env[PATH] = /usr/local/bin:/usr/bin:/bin
env[TMP] = /tmp
env[TMPDIR] = /tmp
env[TEMP] = /tmp

; Additional php.ini defines, specific to this pool of workers.
php_admin_value[sendmail_path] = /usr/sbin/sendmail -t -i -f www@my.domain.com
php_flag[display_errors] = off
php_admin_value[error_log] = /var/log/php-fpm/www-error.log
php_admin_flag[log_errors] = on
php_admin_value[memory_limit] = 512M
php_admin_value[max_execution_time] = 60
php_admin_value[max_input_time] = 60
php_admin_value[post_max_size] = 100M
php_admin_value[upload_max_filesize] = 100M
php_admin_value[max_file_uploads] = 20

; Security
php_admin_value[disable_functions] = exec,passthru,shell_exec,system,proc_open,popen,curl_exec,curl_multi_exec,parse_ini_file,show_source
php_admin_value[open_basedir] = /var/www/html:/tmp:/usr/local/lib/php
php_admin_flag[allow_url_fopen] = on
php_admin_flag[allow_url_include] = off